definitions: 
  env_versions: &env_versions
    flutter: stable
  scripts:
    - &get_flutter_packages
      name: Get Flutter packages
      script: |
        flutter packages pub get
    - &analyze_flutter
      name: Flutter analyze
      script: |
        flutter analyze
    - &flutter_unit_tests
      name: Flutter unit tests
      script: |
        flutter test
    - &flutter_build_webapp
      name: Flutter build webapp
      script: |
        flutter build web --release
        cd build/web
        7z a -r ../web.zip ./*
  email_develop: &email_develop
    email:
      recipients:
        - user_3@example.com
        - user_4@example.com
        - ivan@codemagic.io
  slack_publish: &slack_publish
    slack:
      channel: "#builds" 
workflows: 
  label-triggered-checks:
    name: Label Triggered Checks
    triggering:
      events:
        - pull_request_labeled
      cancel_previous_builds: true
    when:
      condition: event.pull_request.labels[labels.length - 1].name == "Good to Merge"
    integrations:
      app_store_connect: ivan-codemagic-demo
  
    environment:
      xcode: 16.4
      groups:
        - keystore_credentials
        - google_play
        - codepush
      ios_signing:
        distribution_type: app_store
        bundle_identifier: io.codemagic.ivanyaml
      vars:
        APP_ID: 6738692730 # <-- Use the TestFlight Apple id number (An automatically generated ID assigned to your app) found under General > App Information > Apple ID.
      flutter: stable
    scripts:
      - name: Melos&bootstrap
        script: |
          echo "FLUTTER_ROOT is set to: $FLUTTER_ROOT"
          echo "CM_BUILD_DIR is set to: $CM_BUILD_DIR"
          
          if [ -d "$CM_BUILD_DIR/.fvm/" ]; then
            echo "$CM_BUILD_DIR/.fvm/ exists."
          else
            echo "$CM_BUILD_DIR/.fvm/ does not exist, creating it now."
            mkdir -p $CM_BUILD_DIR/.fvm/
          fi
          
          ln -s $FLUTTER_ROOT $CM_BUILD_DIR/.fvm/flutter_sdk
          echo "Symbolic link created."
          echo "Verifying symbolic link..."
          ls -l $CM_BUILD_DIR/.fvm/flutter_sdk
          $CM_BUILD_DIR/.fvm/flutter_sdk/bin/flutter --version
          
          # Run commands that might fail, but continue if they do
          dart pub global activate flutterfire_cli || echo "FlutterFire CLI activation failed, continuing..."
          dart pub global activate melos || echo "Melos activation failed, continuing..."
          melos bootstrap || echo "Melos bootstrap failed, continuing..."
  
      - name: Machine Specs
        script: |
          echo "Machine: $(sysctl -n machdep.cpu.brand_string)"
          echo "CPU cores: $(sysctl -n hw.physicalcpu) physical / $(sysctl -n hw.logicalcpu) logical"
          echo "RAM: $(($(sysctl -n hw.memsize) / 1024 / 1024 / 1024)) GB"

      - name: Set up code signing settings on Xcode project
        script: | 
          xcode-project use-profiles
      - name: Get Flutter packages
        script: | 
          flutter pub get
      - name: Install pods
        script: | 
          find . -name "Podfile" -execdir pod install \;
      - name: Flutter analyze
        script: | 
          flutter analyze
      - name: Flutter unit tests
        script: | 
          flutter test
        ignore_failure: true
      - name: Flutter build ipa
        script: | 
          BUILD_NUMBER=$(($(app-store-connect get-latest-app-store-build-number "$APP_ID") + 1))
          flutter build ipa --release \
            --build-name=1.0.$BUILD_NUMBER \
            --build-number=$BUILD_NUMBER \
            --export-options-plist=/Users/builder/export_options.plist
      - name: Check .ipa Path
        script: |
          ls -R build/ios/

    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - ivan@codemagic.io
          - user_2@example.com
        notify:
          success: true
          failure: true
      app_store_connect:
        auth: integration

        # Configuration related to TestFlight (optional)
        # Note: This action is performed during post-processing.
        submit_to_testflight: false
        beta_groups: # Specify the names of beta tester groups that will get access to the build once it has passed beta review.
          - group name 1
          - group name 2

        # Configuration related to App Store (optional)
        # Note: This action is performed during post-processing.
        submit_to_app_store: false


  ios-yaml-workflow:
    name: iOS Workflow
    #instance_type: mac_mini_m2
    max_build_duration: 120
    integrations:
      app_store_connect: ivan-codemagic-demo
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: '*'
          include: true
          source: true
      cancel_previous_builds: false
    environment:
      xcode: 16.4
      groups:
        - keystore_credentials
        - google_play
        - codepush
      ios_signing:
        distribution_type: app_store
        bundle_identifier: io.codemagic.ivanyaml
      vars:
        APP_ID: 6738692730 # <-- Use the TestFlight Apple id number (An automatically generated ID assigned to your app) found under General > App Information > Apple ID.
      flutter: stable
    scripts:
      - name: Melos&bootstrap
        script: |
          echo "FLUTTER_ROOT is set to: $FLUTTER_ROOT"
          echo "CM_BUILD_DIR is set to: $CM_BUILD_DIR"
          
          if [ -d "$CM_BUILD_DIR/.fvm/" ]; then
            echo "$CM_BUILD_DIR/.fvm/ exists."
          else
            echo "$CM_BUILD_DIR/.fvm/ does not exist, creating it now."
            mkdir -p $CM_BUILD_DIR/.fvm/
          fi
          
          ln -s $FLUTTER_ROOT $CM_BUILD_DIR/.fvm/flutter_sdk
          echo "Symbolic link created."
          echo "Verifying symbolic link..."
          ls -l $CM_BUILD_DIR/.fvm/flutter_sdk
          $CM_BUILD_DIR/.fvm/flutter_sdk/bin/flutter --version
          
          # Run commands that might fail, but continue if they do
          dart pub global activate flutterfire_cli || echo "FlutterFire CLI activation failed, continuing..."
          dart pub global activate melos || echo "Melos activation failed, continuing..."
          melos bootstrap || echo "Melos bootstrap failed, continuing..."
  
      - name: Machine Specs
        script: |
          echo "Machine: $(sysctl -n machdep.cpu.brand_string)"
          echo "CPU cores: $(sysctl -n hw.physicalcpu) physical / $(sysctl -n hw.logicalcpu) logical"
          echo "RAM: $(($(sysctl -n hw.memsize) / 1024 / 1024 / 1024)) GB"

      - name: Set up code signing settings on Xcode project
        script: | 
          xcode-project use-profiles
      - name: Get Flutter packages
        script: | 
          flutter pub get
      - name: Install pods
        script: | 
          find . -name "Podfile" -execdir pod install \;
      - name: Flutter analyze
        script: | 
          flutter analyze
      - name: Flutter unit tests
        script: | 
          flutter test
        ignore_failure: true
      - name: Flutter build ipa
        script: | 
          BUILD_NUMBER=$(($(app-store-connect get-latest-app-store-build-number "$APP_ID") + 1))
          flutter build ipa --release \
            --build-name=1.0.$BUILD_NUMBER \
            --build-number=$BUILD_NUMBER \
            --export-options-plist=/Users/builder/export_options.plist
      - name: Check .ipa Path
        script: |
          ls -R build/ios/

      #- name: Install CodePush cli tools
      #  script: |
      #    git clone https://github.com/microsoft/code-push-server /tmp/code-push-server
      #    cd /tmp/code-push-server/cli
      #    npm install && npm run build && npm install -g
      #- name: CodePush authentication
      #  script: |
      #    code-push-standalone login "https://codepush.codemagic.io" --key $CODEPUSH_ACCESS_KEY
      #- name: CodePush add app # this script can be skipped if you have existing apps
      #  script: |
      #    code-push-standalone app add YOUR_PREFERRED_APP_NAME
      #    code-push-standalone app ls
      #- name: Install npm dependencies
      #  script: |
      #    npm install
      #- name: Codepush deployment
      #  script: |
      #    code-push-standalone release-react IVANYAML ios -d Staging # -d refers to the deployment name e.g. Production, Staging
      #    code-push-standalone release-react IVANYAML android -d Staging # -d refers to the deployment name e.g. Production, Staging
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - ivan@codemagic.io
          - user_2@example.com
        notify:
          success: true
          failure: true
      app_store_connect:
        auth: integration

        # Configuration related to TestFlight (optional)
        # Note: This action is performed during post-processing.
        submit_to_testflight: false
        beta_groups: # Specify the names of beta tester groups that will get access to the build once it has passed beta review.
          - group name 1
          - group name 2

        # Configuration related to App Store (optional)
        # Note: This action is performed during post-processing.
        submit_to_app_store: false



  android-workflow:
    name: Android Workflow
    #instance_type: mac_mini_m4
    max_build_duration: 60
    environment:
      groups:
        - keystore_credentials
        - google_play
        - codepush
      vars:
        PACKAGE_NAME: "io.codemagic.ivan"
        GOOGLE_PLAY_TRACK: internal
        submit_as_draft: true
      flutter: stable  #or we can write << : *env_versions
      android_signing:
        - android_keystore
    #triggering:
    #  events:
    #    - push
    #  branch_patterns:
    #    - pattern: '*'
    #      include: true
    #      source: true
    #  cancel_previous_builds: false
    scripts:
      - name: Set up code signing settings on Xcode project
        script: xcode-project use-profiles
      - name: Set up local.properties
        script: |
          echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - name: Flutter analyze
        script: |
          flutter analyze
      - name: Flutter unit tests
        script: |
          flutter test
        ignore_failure: true
      - name: Build AAB with Flutter
        script: |   
          BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks="$GOOGLE_PLAY_TRACK") + 1))      
          flutter build appbundle --release \
            --build-name=1.0.$BUILD_NUMBER \
            --build-number=$BUILD_NUMBER

      - name: Install CodePush cli tools
        script: |
          git clone https://github.com/microsoft/code-push-server /tmp/code-push-server
          cd /tmp/code-push-server/cli
          npm install && npm run build && npm install -g
      - name: CodePush authentication
        script: |
          code-push-standalone login "https://codepush.codemagic.io" --key $CODEPUSH_ACCESS_KEY
      #- name: CodePush add app # this script can be skipped if you have existing apps
      #  script: |
      #    code-push-standalone app add YOUR_PREFERRED_APP_NAME
      #    code-push-standalone app ls
      - name: Install npm dependencies
        script: |
          npm install
      - name: Codepush deployment
        script: |
          code-push-standalone release-react IVANYAML ios -d Staging # -d refers to the deployment name e.g. Production, Staging
          code-push-standalone release-react IVANYAML android -d Staging # -d refers to the deployment name e.g. Production, Staging
    artifacts:
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/mapping.txt
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - user_1@example.com
          - user_2@example.com
        notify:
          success: true
          failure: false
      <<: *email_develop
      <<: *slack_publish
      scripts:
        - echo 'Post-publish script'
  
  web-workflow:
    name: Web app workflow
    max_build_duration: 10
    environment:
      << : *env_versions
      groups:
        - keystore_credentials
        - google_play
    scripts:
      - *get_flutter_packages
      - *analyze_flutter
      - *flutter_unit_tests
      - *flutter_build_webapp
    artifacts:
      - build/web.zip
      - flutter_drive.log
    publishing:
      <<: *email_develop
  
  flutter-ios-simulator:
    name: Flutter iOS Simulator
    environment:
      flutter: 3.27.3
      xcode: 16.3
    scripts:

      - name: Machine Specs
        script: |
          echo "Machine: $(sysctl -n machdep.cpu.brand_string)"
          echo "CPU cores: $(sysctl -n hw.physicalcpu) physical / $(sysctl -n hw.logicalcpu) logical"
          echo "RAM: $(($(sysctl -n hw.memsize) / 1024 / 1024 / 1024)) GB"
          echo "GPU Info:"
          system_profiler SPDisplaysDataType
          
      - name: Run Flutter pub get

        script: flutter pub get

      - name: Build unsigned .app for simulator

        script: flutter build ios --simulator

    artifacts:

      - build/ios/iphonesimulator/Runner.app
      #- name: install dependencies 
      #  script: flutter pub get
      #- name: Build unsigned .app
      #  script: |  
      #    xcodebuild -workspace "ios/Runner.xcworkspace" \ 
      #      -scheme "Runner" \
      #      -sdk iphonesimulator \
      #      -destination 'platform=iOS Simulator,name=iPhone 16 Pro Max,OS=18.2' \
      #      -configuration Debug \
      #      CODE_SIGN_IDENTITY="" \
      #      CODE_SIGNING_REQUIRED=NO \
      #      CODE_SIGNING_ALLOWED=NO \
      #      -derivedDataPath ios/output
    #artifacts:
      #- ios/output/Build/Products/Debug-iphonesimulator/Runner.app

  android-simulator:
    name: Android debug workflow
    scripts:
      - name: Set Android SDK location
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"          
      - name: Build Android
        script: |
          gradle init
          gradle wrapper
                    
    artifacts:
      - app/build/outputs/apk/debug/app-debug.apk

